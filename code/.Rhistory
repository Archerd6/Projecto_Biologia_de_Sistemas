library(TH.data)
library(survival)
library(survminer)
library(discretization)
data("GBSG2", package = "TH.data")
str(GBSG2)
survival <- Surv(GBSG2$time,GBSG2$cens)
table(GBSG2$horTh)
fit <- survfit(survival ~horTh
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$progrec)
sum(GBSG2$progrec==0)/length(GBSG2$progrec)
GBSG2$progrec <- cut(GBSG2$progrec,breaks=c(0,max(GBSG2$progrec)+1))
table(GBSG2$progrec)
fit <- survfit(survival ~estrec
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$estrec)
sum(GBSG2$estrec==0)/length(GBSG2$estrec)
GBSG2$estrec <- cut(GBSG2$estrec,breaks=c(-1,0,max(GBSG2$estrec)))
summary(GBSG2$estrec)
summary(GBSG2$age)
GBSG2$age <- cut(GBSG2$age,breaks=c(0,55,max(GBSG2$age)))
summary(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$tsize)
library(TH.data)
library(survival)
library(survminer)
library(discretization)
data("GBSG2", package = "TH.data")
str(GBSG2)
GBSG2$tsize <- cut(GBSG2$age,breaks=c(0,25,,55,max(GBSG2$tsize)))
GBSG2$tsize <- cut(GBSG2$age,breaks=c(0,25,55,max(GBSG2$tsize)))
```{r}
fit <- survfit(survival ~tsize
, data = GBSG2)
survival <- Surv(GBSG2$time,GBSG2$cens)
fit <- survfit(survival ~tsize
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
GBSG2$age <- cut(GBSG2$age,breaks=c(0,55,max(GBSG2$age)))
summary(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
GBSG2$estrec <- cut(GBSG2$estrec,breaks=c(-1,0,max(GBSG2$estrec)))
summary(GBSG2$estrec)
fit <- survfit(survival ~estrec
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
fit <- survfit(survival ~prorec
, data = GBSG2)
GBSG2$progrec <- cut(GBSG2$progrec,breaks=c(0,max(GBSG2$progrec)+1))
table(GBSG2$progrec)
library(TH.data)
library(survival)
library(survminer)
library(discretization)
data("GBSG2", package = "TH.data")
str(GBSG2)
survival <- Surv(GBSG2$time,GBSG2$cens)
table(GBSG2$horTh)
fit <- survfit(survival ~horTh
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$progrec)
sum(GBSG2$progrec==0)/length(GBSG2$progrec)
GBSG2$progrec <- cut(GBSG2$progrec,breaks=c(-1,0,max(GBSG2$progrec)))
table(GBSG2$progrec)
fit <- survfit(survival ~progrec
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$estrec)
sum(GBSG2$estrec==0)/length(GBSG2$estrec)
GBSG2$estrec <- cut(GBSG2$estrec,breaks=c(-1,0,max(GBSG2$estrec)))
summary(GBSG2$estrec)
fit <- survfit(survival ~estrec
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$age)
GBSG2$age <- cut(GBSG2$age,breaks=c(0,55,max(GBSG2$age)))
summary(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$tsize)
GBSG2$tsize <- cut(GBSG2$age,breaks=c(0,25,55,max(GBSG2$tsize)))
GBSG2$tsize <- cut(GBSG2$age,breaks=c(0,25,55,max(GBSG2$tsize)))
GBSG2$tsize <- cut(GBSG2$tsize,breaks=c(0,25,55,max(GBSG2$tsize)))
fit <- survfit(survival ~tsize
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
library(igraph)
library(ggplot2)
data("GBSG2", package = "TH.data")
GBSG2$age <- discretize(
GBSG2$age,
method = "frequency",
breaks=60
)
library(TH.data)
library(survival)
library(survminer)
library(arules)
library(arulesCBA)
data("GBSG2", package = "TH.data")
GBSG2$cens <- as.factor(GBSG2$cens)
GBSG2.disc <- discretizeDF.supervised(cens ~pnodes, GBSG2)
fit <- survfit(survival ~pnodes
, data = GBSG2.disc)
survival <- Surv(GBSG2$time,GBSG2$cens)
data("GBSG2", package = "TH.data")
GBSG2$age <- discretize(
GBSG2$age,
method = "frequency",
breaks=60
)
table(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$age <- discretize(
GBSG2$age,
method = "frequency",
breaks=3
)
table(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
library(TH.data)
library(survival)
library(survminer)
library(arules)
library(arulesCBA)
survgraph <- function(dat,column="horTh",surv=c()){  # Aún no funnciona
datos<-dat
fit <- survfit(surv ~datos$column
, data = datos)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
}
data("GBSG2", package = "TH.data")
str(GBSG2)
survival <- Surv(GBSG2$time,GBSG2$cens)
table(GBSG2$horTh)
fit <- survfit(survival ~GBSG2$horTh
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$progrec)
sum(GBSG2$progrec==0)/length(GBSG2$progrec)
GBSG2$progrec <- cut(GBSG2$progrec,breaks=c(-1,0,max(GBSG2$progrec)))
table(GBSG2$progrec)
fit <- survfit(survival ~progrec
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$estrec)
sum(GBSG2$estrec==0)/length(GBSG2$estrec)
GBSG2$estrec <- cut(GBSG2$estrec,breaks=c(-1,0,max(GBSG2$estrec)))
summary(GBSG2$estrec)
fit <- survfit(survival ~estrec
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$age)
GBSG2$age <- cut(GBSG2$age,breaks=c(0,55,max(GBSG2$age)))
summary(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
summary(GBSG2$tsize)
GBSG2$tsize <- cut(GBSG2$tsize,breaks=c(0,25,55,max(GBSG2$tsize)))
fit <- survfit(survival ~tsize
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$pnodes <- discretize(
GBSG2$pnodes,
method = "frequency",
breaks=2
)
table(GBSG2$pnodes)
fit <- survfit(survival ~pnodes
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$cens <- as.factor(GBSG2$cens)
GBSG2.disc <- discretizeDF.supervised(cens ~pnodes, GBSG2)
fit <- survfit(survival ~pnodes
, data = GBSG2.disc)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$age <- discretize(
GBSG2$age,
method = "frequency",
breaks=3
)
table(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$cens <- as.factor(GBSG2$cens)
GBSG2.disc <- discretizeDF.supervised(cens ~age, GBSG2)
fit <- survfit(survival ~age
, data = GBSG2.disc)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$age <- discretize(
GBSG2$age,
method = "frequency",
breaks=6
)
table(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
data("GBSG2", package = "TH.data")
GBSG2$age <- discretize(
GBSG2$age,
method = "frequency",
breaks=10
)
table(GBSG2$age)
fit <- survfit(survival ~age
, data = GBSG2)
ggsurvplot(fit, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
library(TH.data)
library(survival)
library(survminer)
library(hier.part)
data("GBSG2", package = "TH.data")
summary(GBSG2$menostat)
res.cox<-coxph(Surv(time, cens)~., data=GBSG2)
summary(res.cox)
ggsurvplot(res.cox, conf.int = T, censor = T, cex.axis=3.0,
cex.lab=3.0, main = "Survival curve",pval=T)
score_threshold=400
source("C:/Users/alepa/OneDrive/Escritorio/Universidad/4.Cuarto año/Biología de sistemas/Trabajo investigacion/Proyecto_Biologia_de_Sistemas/code/analisis_comunidades_grafo.R")
setwd("C:/Users/alepa/OneDrive/Escritorio/Universidad/4.Cuarto año/Biología de sistemas/Trabajo investigacion/Proyecto_Biologia_de_Sistemas/code")
source("C:/Users/alepa/OneDrive/Escritorio/Universidad/4.Cuarto año/Biología de sistemas/Trabajo investigacion/Proyecto_Biologia_de_Sistemas/code/analisis_comunidades_grafo.R")
DC_lc <- getLinkCommunities(DFNetwork,hcmethod = "single") #Comunidades por LinkComm
string_db <- STRINGdb$new( version="11", species=9606, score_threshold=400, input_directory="" )
string.network <- string_db$get_graph()
hits <- nodes$X9606.ENSP00000442954 #Nos quedamos con los String_ID de nuestro conjunto de genes
hits.network <- string_db$get_subnetwork(hits) #Creamos una network usando StringDb
first.neigh <- (neighbors(graph = string.network, v = V(hits.network)$name, mode = "all"))$name #Encontrams una serie de nodos vecinos
hits.network <- string_db$get_subnetwork(unique(c(V(hits.network)$name, first.neigh))) #Unimos la red de nodos originales con la red de vecinos
DFNetwork <- igraph::as_data_frame(hits.network)
DC_lc <- getLinkCommunities(DFNetwork,hcmethod = "single") #Comunidades por LinkComm
plot(DC_lc,
type = "graph",
vsize = 20,
vshape = "circle",
vlabel = FALSE,
layout = layout.fruchterman.reingold)
DC_lc$clustsizes
return(genes)
Muestra <- function(Clustnumber){
Nodes <- getNodesIn(DC_lc,clusterids = c(Clustnumber))#Obtenemos los genes de la comunidad seleccionada
Nodes<-gsub("9606.","",Nodes)#Procesamos su formato string
genes = bitr(Nodes, fromType="ENSEMBLPROT", toType="ENTREZID", OrgDb="org.Hs.eg.db")#Los pasamos a tipo ENTREZID
genes$ENTREZID=as.numeric(genes$ENTREZID)#Pasamos estos ENTREZID a numérico
return(genes)
}
Comm1 <- Muestra(1)
ego <- enrichGO(gene          = Comm1$ENTREZID,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
Comm1 <- Muestra(64)
ego <- enrichGO(gene          = Comm1$ENTREZID,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
Comm1 <- Muestra(43)
ego <- enrichGO(gene          = Comm1$ENTREZID,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
Comm1 <- Muestra(43)
ego <- enrichGO(gene          = Comm1$ENTREZID,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
Comm1 <- Muestra(42)
ego <- enrichGO(gene          = Comm1$ENTREZID,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
